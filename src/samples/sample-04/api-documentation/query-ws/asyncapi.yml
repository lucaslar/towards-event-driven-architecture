asyncapi: '2.3.0'

info:
  title: Query Service Websocket API
  version: '1.0-SNAPSHOT'
  description: |
    Check out further documentations of this architecture:
      - [Query Service (AMQP)](/query-amqp/)
      - [Laureate Service (AMQP)](/laureate-amqp/)
      - [Prize Service (AMQP)](/prize-amqp/)
channels:
  query:
    publish:
      summary: Send queries to be processed.
      message:
        $ref: '#/components/messages/submittedQueryData'
  query.submitted:
    subscribe:
      summary: Receive validated, accepted queries.
      message:
        $ref: '#/components/messages/acceptedQueryData'
  query.rejected:
    subscribe:
      summary: Receive information about rejected queries.
      message:
        $ref: '#/components/messages/invalidQuery'
  query.closed:
    subscribe:
      summary: Receive information about a closed query.
      message:
        $ref: '#/components/messages/closedQuery'
  laureate.results:
    subscribe:
      summary: Receive data for found laureates.
      message:
        $ref: '#/components/messages/laureateResultsData'
  laureate.failed:
    subscribe:
      summary: Receive information about a failed laureate search.
      message:
        $ref: '#/components/messages/laureateFailed'
  prize.results:
    subscribe:
      summary: Receive data for found prizes.
      message:
        $ref: '#/components/messages/prizeResultsData'
  prize.failed:
    subscribe:
      summary: Receive information about a failed prize search.
      message:
        $ref: '#/components/messages/prizeFailed'

components:
  messages:
    submittedQueryData:
      summary: Message containing submitted query data.
      description: |
        This message is similar to the synchronous request in samples 01-03, but includes an optional clientRef.
      payload:
        type: object
        properties:
          queryData:
            $ref: '#/components/schemas/queryData'
          clientRef:
            type: string
        required:
          - queryData
      examples:
        - name: Dorothy Hodgkin
          summary: Search with all paramters.
          payload:
            queryData:
              firstName: Dorothy
              lastName: Hodgkin
              gender: female
              birthDate: { operator: "eq", date: "1910-05-12" }
              deathDate: { operator: "eq", date: "1994-07-29" }
              birthLocation: [ stq ]
              deathLocation: [ gcq ]
            clientRef: Some String
        - name: Young laureates
          summary: Laureates born in 1995 or later (i.e. after 1994)
          payload:
            queryData:
              birthDate: { operator: "gt", year: 1994 }
            clientRef: Some String
        - name: Alber eins (no client ref)
          summary: Search with partial strings.
          payload:
            queryData:
              firstName: 'Alber'
              lastName: 'eins'
        - name: Berliners
          summary: All laureates born and passed in 'u33' (geo hash)
          payload:
            queryData:
              birthLocation: ['u33']
              deathLocation: ['u33']
            clientRef: Some String
    laureateResultsData:
      summary: Data forwarded from a Laureate Service
      payload:
        type: object
        additionalProperties: false
        properties:
          type:
            type: string
            const: laureate.results
          data:
            $ref: '#/components/schemas/laureateData'
          ref:
            type: string
    acceptedQueryData:
      summary: Message including validated query data.
      description: |
        This message indicates that a query has been accepted and will be processed further.
        It includes the query's UUID and timestamp of acceptance.
      payload:
        type: object
        additionalProperties: false
        properties:
          type:
            type: string
            const: query.submitted
          data:
            type: object
            properties:
              uuid:
                type: string
                format: uuid
              timestamp:
                type: integer
              queryData:
                $ref: '#/components/schemas/queryData'
          ref:
            type: string
      examples:
        - name: Dorothy Hodgkin
          summary: Validated query
          payload:
            {"type":"query.submitted","data":{"uuid":"6ade87a2-5596-4a29-8bea-9930d8624590","timestamp":1648312398901,"queryData":{"firstName":"Dorothy","lastName":"Hodgkin","gender":"female","birthDate":{"operator":"eq","date":"1910-05-12"},"deathDate":{"operator":"eq","date":"1994-07-29"},"birthLocation":["stq"],"deathLocation":["gcq"]}},"ref":"2ce69861-701f-4f87-ad13-f9eb5c83ed67"}
    invalidQuery:
      summary: Information about an invalid query.
      payload:
        type: object
        additionalProperties: false
        properties:
          type:
            type: string
            const: query.rejected
          message:
            type: string
            const: Invalid query
          ref:
            type: string
    closedQuery:
      summary: Information about a closed query.
      payload:
        type: object
        additionalProperties: false
        properties:
          type:
            type: string
            const: query.closed
          message:
            type: string
            format: uuid
          ref:
            type: string
    laureateFailed:
      summary: Information about a failed laureate search.
      payload:
        type: object
        additionalProperties: false
        properties:
          type:
            type: string
            const: laureate.failed
          data:
            $ref: '#/components/schemas/failedData'
          ref:
            type: string
    prizeFailed:
      summary: Information about a failed prize search.
      payload:
        type: object
        additionalProperties: false
        properties:
          type:
            type: string
            const: prize.failed
          data:
            $ref: '#/components/schemas/failedData'
          ref:
            type: string
    prizeResultsData:
      summary: Data forwarded from the Prize Service
      payload:
        type: object
        additionalProperties: false
        properties:
          type:
            type: string
            const: prize.results
          data:
            $ref: '#/components/schemas/prizeData'
          ref:
            type: string

  schemas:
    queryData:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        gender:
          type: string
          enum: [female, male, divers, org]
        birthDate:
          oneOf:
            - type: object
              properties:
                operator:
                  type: string
                  enum: [ eq, lt, gt ]
                date:
                  type: string
                  format: date
            - type: object
              properties:
                operator:
                  type: string
                  enum: [ eq, lt, gt ]
                year:
                  type: number
                  format: year
        deathDate:
          oneOf:
            - type: object
              properties:
                operator:
                  type: string
                  enum: [ eq, lt, gt ]
                date:
                  type: string
                  format: date
            - type: object
              properties:
                operator:
                  type: string
                  enum: [eq, lt, gt]
                year:
                  type: number
                  format: year
        birthLocation:
          type: array
          items:
            type: string
        deathLocation:
          type: array
          items:
            type: string
    laureateData:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        scope:
          type: string
        laureates:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
              name:
                type: string
              givenName:
                type: string
              gender:
                type: string
                enum: [female, male, divers, org]
              wikiUrl:
                type: string
                format: url
              laureateUrl:
                type: string
                format: url
              externalUrl:
                type: string
                format: url
              birth:
                type: string
                format: date
              birthYear:
                type: number
                format: year
              death:
                type: string
                format: date
              deathYear:
                type: number
                format: year
              birthLocation:
                type: string
              deathLocation:
                type: string
    prizeData:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        scope:
          type: string
        prizes:
          type: array
          items:
            type: object
            properties:
              category:
                type: string
              laureate:
                type: integer
              year:
                type: number
                format: year
              prizeAmount:
                type: integer
              prizeAmountAdjusted:
                type: integer
    failedData:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        message:
          type: string
        scope:
          type: string